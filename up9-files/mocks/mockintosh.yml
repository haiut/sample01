# This is a Mockintosh configuration file.
# Mockintosh provides a microservices friendly, small footprint HTTP mock service.
# A standard laptop can run dozens of Mockintosh instances, or you can run all instances in a single Docker container.
#
# Install Mockintosh:                 pip3 install mockintosh
# Run locally:                        mockintosh <this-file>
# Run with Docker:                    docker run -it -p 8000-8005:8000-8005 -v `pwd`:/tmp testrio/mockintosh /tmp/<this-file>
# More information can be found here: https://github.com/up9inc/mockintosh

---
management:
  port: 8000
services:
- name: http://trdemo-client
  port: 8001
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___trdemo-client-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_1.html'
      useTemplating: false
  - path: /cart
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_2.html'
      useTemplating: false
  - path: /flight
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_3.html'
      useTemplating: false
  - path: /search
    response:
      headers:
        Content-Type: text/html
- name: http://trdemo-flights
  port: 8002
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___trdemo-flights-spec.json'
  endpoints:
  - path: /flight/{{product_id}}/{{param}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_5.json'
  - path: /flight/{{product_id}}
    response:
      headers:
        Content-Type: application/json
      body: '{"airline":"LH","cost":1800,"date":"2021-07-12","destination":"BOS","flight_id":"LH-213","flight_number":"213","source":"FRA","time":"00:00","weekday":0}'
      useTemplating: false
- name: http://trdemo-shoppingcart
  port: 8003
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___trdemo-shoppingcart-spec.json'
  endpoints:
  - path: /cart/{{param}}
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "products": [
          {
           "count": 1,
           "product_id": "LH-213"
          },
          {
           "count": 1,
           "product_id": "LY-007"
          },
          {
           "count": 1,
           "product_id": "LY-011"
          },
          {
           "count": 1,
           "product_id": "LY-001"
          }
         ],
         "user_id": "{{request.path.[2]}}"
        }
- name: http://trdemo-users
  port: 8004
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___trdemo-users-spec.json'
  endpoints:
  - path: /user/{{param}}
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "airport": "TLV",
         "currency": "ILS",
         "email": "{{request.path.[2]}}",
         "firstname": "Alex",
         "lastname": "Haiut"
        }
