# This is a Mockintosh configuration file.
# Mockintosh provides a microservices friendly, small footprint HTTP mock service.
# A standard laptop can run dozens of Mockintosh instances, or you can run all instances in a single Docker container.
#
# Install Mockintosh:                 pip3 install mockintosh
# Run locally:                        mockintosh <this-file>
# Run with Docker:                    docker run -it -p 8000-8005:8000-8005 -v `pwd`:/tmp testrio/mockintosh /tmp/<this-file>
# More information can be found here: https://github.com/up9inc/mockintosh

---
management:
  port: 8000
services:
- name: http://carts.sock-shop
  port: 8001
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___carts.sock-shop-spec.json'
  endpoints:
  - path: /carts/{{id}}/items
    response:
      headers:
        Content-Type: application/json
      body: '[]'
      useTemplating: false
  - path: /carts/{{id}}
    response:
      status: 202
    method: delete
  - path: /carts/{{id}}/items
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: |-
        {
         "id": "603679b10c74b60006e8c503",
         "itemId": "{{request.body}}",
         "quantity": 1,
         "unitPrice": 99.99
        }
    method: post
  - path: /carts/{{id}}/items
    response:
      status: 202
    method: patch
  - path: /carts/{{id}}/items/{{itemId}}
    response:
      status: 202
    method: delete
  - path: /carts/{{id}}/merge
    response:
      status: 202
- name: http://catalogue.sock-shop
  port: 8002
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___catalogue.sock-shop-spec.json'
  endpoints:
  - path: /catalogue/{{id}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_1.json'
  - path: /catalogue
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_2.json'
  - path: /catalogue/size
    response:
      headers:
        Content-Type: application/json
      body: '{"size":9,"err":null}'
      useTemplating: false
  - path: /tags
    response:
      headers:
        Content-Type: application/json
      body: '{"tags":["brown","geek","formal","blue","skin","red","action","sport","black","magic","green"],"err":null}'
      useTemplating: false
- name: http://front-end.sock-shop
  port: 8003
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___front-end.sock-shop-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_3.html'
      useTemplating: false
- name: http://orders.sock-shop
  port: 8004
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___orders.sock-shop-spec.json'
  endpoints:
  - path: /orders
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_21.json'
      useTemplating: false
    method: post
  - path: /orders/{{id}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_22.json'
      useTemplating: false
  - path: /orders/search/customerId
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_23.json'
      useTemplating: false
- name: http://payment.sock-shop
  port: 8005
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___payment.sock-shop-spec.json'
  endpoints:
  - path: /paymentAuth
    response:
      headers:
        Content-Type: application/json
      body: '{"authorised":false,"message":"Payment declined: amount exceeds 100.00"}'
      useTemplating: false
    method: post
- name: http://shipping.sock-shop
  port: 8006
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___shipping.sock-shop-spec.json'
  endpoints:
  - path: /shipping
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: |-
        {
         "id": "{{request.body}}",
         "name": "{{request.body}}"
        }
    method: post
- name: http://user.sock-shop
  port: 8007
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___user.sock-shop-spec.json'
  endpoints:
  - path: /addresses
    response:
      headers:
        Content-Type: application/json
      body: '{"id":"60367a112dc2460001e55e05"}'
      useTemplating: false
    method: post
  - path: /cards
    response:
      headers:
        Content-Type: application/json
      body: '{"id":"60367a262dc2460001e55e06"}'
      useTemplating: false
    method: post
  - path: /customers/{{id}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_17.json'
  - path: /customers/{{id}}/addresses
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_18.json'
      useTemplating: false
  - path: /customers/{{id}}/cards
    response:
      headers:
        Content-Type: application/json
      body: '{"_embedded":{"card":[{"longNum":"4242 4242 4242 4242","expires":"04/24","ccv":"223","id":"60367a262dc2460001e55e06","_links":{"card":{"href":"http://user/cards/60367a262dc2460001e55e06"},"self":{"href":"http://user/cards/60367a262dc2460001e55e06"}}}]}}'
      useTemplating: false
  - path: /register
    response:
      headers:
        Content-Type: application/json
      body: '{"id":"603679a42dc2460001e55e04"}'
      useTemplating: false
    method: post
  - path: /addresses/{{addresseId}}
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "street": "Main",
         "number": "7",
         "country": "USA",
         "city": "NYC",
         "postcode": "12345",
         "id": "{{request.path.[2]}}",
         "_links": {
          "address": {
           "href": "http://user/addresses/60367a112dc2460001e55e05"
          },
          "self": {
           "href": "http://user/addresses/60367a112dc2460001e55e05"
          }
         }
        }
  - path: /cards/{{cardId}}
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "longNum": "4242 4242 4242 4242",
         "expires": "04/24",
         "ccv": "223",
         "id": "{{request.path.[2]}}",
         "_links": {
          "card": {
           "href": "http://user/cards/60367a262dc2460001e55e06"
          },
          "self": {
           "href": "http://user/cards/60367a262dc2460001e55e06"
          }
         }
        }
