{
 "3": "    @clear_session({'spanId': 3})\n    def test_03_get_(self):\n        # GET http://front-end.sock-shop/ (endp 3)\n        front_end_sock_shop = get_http_target('TARGET_FRONT_END_SOCK_SHOP', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "15": "    @json_dataset('data/dataset_15.json')\n    @clear_session({'spanId': 15})\n    def test_15_post_addresses(self, data_row):\n        number, postcode, userID = data_row\n\n        # POST http://user.sock-shop/addresses (endp 15)\n        user_sock_shop = get_http_target('TARGET_USER_SOCK_SHOP', authenticate)\n        with open('data/payload_for_endp_15.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.number', number)\n        apply_into_json(json_payload, '$.postcode', postcode)\n        apply_into_json(json_payload, '$.userID', userID)\n        resp = user_sock_shop.post('/addresses', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "24": "    @json_dataset('data/dataset_24.json')\n    @clear_session({'spanId': 24})\n    def test_24_get_addresses_addresseId(self, data_row):\n        addresseId, = data_row\n\n        # GET http://user.sock-shop/addresses/{addresseId} (endp 24)\n        user_sock_shop = get_http_target('TARGET_USER_SOCK_SHOP', authenticate)\n        resp = user_sock_shop.get(f'/addresses/{addresseId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.city', expected_value='NYC')\n\n",
 "16": "    @json_dataset('data/dataset_16.json')\n    @clear_session({'spanId': 16})\n    def test_16_post_cards(self, data_row):\n        ccv, expires, longNum, userID = data_row\n\n        # POST http://user.sock-shop/cards (endp 16)\n        user_sock_shop = get_http_target('TARGET_USER_SOCK_SHOP', authenticate)\n        with open('data/payload_for_endp_16.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.ccv', ccv)\n        apply_into_json(json_payload, '$.expires', expires)\n        apply_into_json(json_payload, '$.longNum', longNum)\n        apply_into_json(json_payload, '$.userID', userID)\n        resp = user_sock_shop.post('/cards', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "25": "    @json_dataset('data/dataset_25.json')\n    @clear_session({'spanId': 25})\n    def test_25_get_cards_cardId(self, data_row):\n        cardId, = data_row\n\n        # GET http://user.sock-shop/cards/{cardId} (endp 25)\n        user_sock_shop = get_http_target('TARGET_USER_SOCK_SHOP', authenticate)\n        resp = user_sock_shop.get(f'/cards/{cardId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "17": "    @json_dataset('data/dataset_17.json')\n    @clear_session({'spanId': 17})\n    def test_17_get_customers_id(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/customers/{id} (endp 17)\n        user_sock_shop = get_http_target('TARGET_USER_SOCK_SHOP', authenticate)\n        resp = user_sock_shop.get(f'/customers/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.username', expected_value='alex')\n\n",
 "18": "    @json_dataset('data/dataset_18.json')\n    @clear_session({'spanId': 18})\n    def test_18_get_customers_id_addresses(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/customers/{id}/addresses (endp 18)\n        user_sock_shop = get_http_target('TARGET_USER_SOCK_SHOP', authenticate)\n        resp = user_sock_shop.get(f'/customers/{id_}/addresses')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$._embedded.address.[*].city', expected_value='NYC')\n\n",
 "19": "    @json_dataset('data/dataset_19.json')\n    @clear_session({'spanId': 19})\n    def test_19_get_customers_id_cards(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/customers/{id}/cards (endp 19)\n        user_sock_shop = get_http_target('TARGET_USER_SOCK_SHOP', authenticate)\n        resp = user_sock_shop.get(f'/customers/{id_}/cards')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "20": "    # authentication-related test\n    @clear_session({'spanId': 20})\n    def test_20_post_register(self):\n        # POST http://user.sock-shop/register (endp 20)\n        user_sock_shop = get_http_target('TARGET_USER_SOCK_SHOP', dummy_auth)\n        with open('data/payload_for_endp_20.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        resp = user_sock_shop.post('/register', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "10": "    @json_dataset('data/dataset_10.json')\n    @clear_session({'spanId': 10})\n    def test_10_delete_carts_id(self, data_row):\n        id_, = data_row\n\n        # DELETE http://carts.sock-shop/carts/{id} (endp 10)\n        carts_sock_shop = get_http_target('TARGET_CARTS_SOCK_SHOP', authenticate)\n        resp = carts_sock_shop.delete(f'/carts/{id_}')\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "4": "    @json_dataset('data/dataset_4.json')\n    @clear_session({'spanId': 4})\n    def test_04_get_carts_id_items(self, data_row):\n        id_, = data_row\n\n        # GET http://carts.sock-shop/carts/{id}/items (endp 4)\n        carts_sock_shop = get_http_target('TARGET_CARTS_SOCK_SHOP', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{id_}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "11": "    @json_dataset('data/dataset_11.json')\n    @clear_session({'spanId': 11})\n    def test_11_post_carts_id_items(self, data_row):\n        id_, itemId, unitPrice = data_row\n\n        # POST http://carts.sock-shop/carts/{id}/items (endp 11)\n        carts_sock_shop = get_http_target('TARGET_CARTS_SOCK_SHOP', authenticate)\n        with open('data/payload_for_endp_11.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts_sock_shop.post(f'/carts/{id_}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n",
 "12": "    @json_dataset('data/dataset_12.json')\n    @clear_session({'spanId': 12})\n    def test_12_patch_carts_id_items(self, data_row):\n        id_, itemId, quantity, unitPrice = data_row\n\n        # PATCH http://carts.sock-shop/carts/{id}/items (endp 12)\n        carts_sock_shop = get_http_target('TARGET_CARTS_SOCK_SHOP', authenticate)\n        with open('data/payload_for_endp_12.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.quantity', quantity)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts_sock_shop.patch(f'/carts/{id_}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "13": "    @json_dataset('data/dataset_13.json')\n    @clear_session({'spanId': 13})\n    def test_13_delete_carts_id_items_itemId(self, data_row):\n        id_, itemId = data_row\n\n        # DELETE http://carts.sock-shop/carts/{id}/items/{itemId} (endp 13)\n        carts_sock_shop = get_http_target('TARGET_CARTS_SOCK_SHOP', authenticate)\n        resp = carts_sock_shop.delete(f'/carts/{id_}/items/{itemId}')\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "14": "    @json_dataset('data/dataset_14.json')\n    @clear_session({'spanId': 14})\n    def test_14_get_carts_id_merge(self, data_row):\n        id_, sessionId = data_row\n\n        # GET http://carts.sock-shop/carts/{id}/merge (endp 14)\n        carts_sock_shop = get_http_target('TARGET_CARTS_SOCK_SHOP', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts_sock_shop.get(f'/carts/{id_}/merge' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "2": "    @json_dataset('data/dataset_2.json')\n    @clear_session({'spanId': 2})\n    def test_02_get_catalogue(self, data_row):\n        size, tags = data_row\n\n        # GET http://catalogue.sock-shop/catalogue (endp 2)\n        catalogue_sock_shop = get_http_target('TARGET_CATALOGUE_SOCK_SHOP', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "1": "    @json_dataset('data/dataset_1.json')\n    @clear_session({'spanId': 1})\n    def test_01_get_catalogue_id(self, data_row):\n        id_, = data_row\n\n        # GET http://catalogue.sock-shop/catalogue/{id} (endp 1)\n        catalogue_sock_shop = get_http_target('TARGET_CATALOGUE_SOCK_SHOP', authenticate)\n        resp = catalogue_sock_shop.get(f'/catalogue/{id_}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "6": "    @clear_session({'spanId': 6})\n    def test_06_get_catalogue_size(self):\n        # GET http://catalogue.sock-shop/catalogue/size (endp 6)\n        catalogue_sock_shop = get_http_target('TARGET_CATALOGUE_SOCK_SHOP', authenticate)\n        qstr = '?' + urlencode([('tags', '')])\n        resp = catalogue_sock_shop.get('/catalogue/size' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "8": "    @clear_session({'spanId': 8})\n    def test_08_get_tags(self):\n        # GET http://catalogue.sock-shop/tags (endp 8)\n        catalogue_sock_shop = get_http_target('TARGET_CATALOGUE_SOCK_SHOP', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "21": "    @json_dataset('data/dataset_21.json')\n    @clear_session({'spanId': 21})\n    def test_21_post_orders(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 21)\n        orders_sock_shop = get_http_target('TARGET_ORDERS_SOCK_SHOP', authenticate)\n        with open('data/payload_for_endp_21.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n        # resp.assert_jsonpath('$.address.city', expected_value='NYC')\n\n",
 "22": "    @json_dataset('data/dataset_22.json')\n    @clear_session({'spanId': 22})\n    def test_22_get_orders_id(self, data_row):\n        id_, = data_row\n\n        # GET http://orders.sock-shop/orders/{id} (endp 22)\n        orders_sock_shop = get_http_target('TARGET_ORDERS_SOCK_SHOP', authenticate)\n        resp = orders_sock_shop.get(f'/orders/{id_}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.address.city', expected_value='NYC')\n\n",
 "23": "    @json_dataset('data/dataset_23.json')\n    @clear_session({'spanId': 23})\n    def test_23_get_orders_search_customerId(self, data_row):\n        custId, = data_row\n\n        # GET http://orders.sock-shop/orders/search/customerId (endp 23)\n        orders_sock_shop = get_http_target('TARGET_ORDERS_SOCK_SHOP', authenticate)\n        qstr = '?' + urlencode([('custId', custId), ('sort', 'date')])\n        resp = orders_sock_shop.get('/orders/search/customerId' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$._embedded.customerOrders.[*].address.city', expected_value='NYC')\n\n",
 "26": "    @json_dataset('data/dataset_26.json')\n    @clear_session({'spanId': 26})\n    def test_26_post_paymentAuth(self, data_row):\n        amount, ccv, expires, id_, id1, id2, longNum, number, postcode = data_row\n\n        # POST http://payment.sock-shop/paymentAuth (endp 26)\n        payment_sock_shop = get_http_target('TARGET_PAYMENT_SOCK_SHOP', authenticate)\n        with open('data/payload_for_endp_26.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address.id', id_)\n        apply_into_json(json_payload, '$.address.number', number)\n        apply_into_json(json_payload, '$.address.postcode', postcode)\n        apply_into_json(json_payload, '$.amount', amount)\n        apply_into_json(json_payload, '$.card.ccv', ccv)\n        apply_into_json(json_payload, '$.card.expires', expires)\n        apply_into_json(json_payload, '$.card.id', id1)\n        apply_into_json(json_payload, '$.card.longNum', longNum)\n        apply_into_json(json_payload, '$.customer.id', id2)\n        resp = payment_sock_shop.post('/paymentAuth', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "27": "    @json_dataset('data/dataset_27.json')\n    @clear_session({'spanId': 27})\n    def test_27_post_shipping(self, data_row):\n        id_, name = data_row\n\n        # POST http://shipping.sock-shop/shipping (endp 27)\n        shipping_sock_shop = get_http_target('TARGET_SHIPPING_SOCK_SHOP', authenticate)\n        with open('data/payload_for_endp_27.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        apply_into_json(json_payload, '$.name', name)\n        resp = shipping_sock_shop.post('/shipping', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n"
}